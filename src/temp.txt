---------------------work pending------------------

the token authentication hasnot done yet. im just using this to store roles now

permit change kora lageb

in updateStorage equipment pathano hocche with all description but setar kaj koi?
also update rakhinai storageContext e.. update kora uchit ig local storage eo

mayeshar kach theke backend kore newa lagbe karon manager side er table e available and borrowed dekhacche na..
backend e kisu habi jabi jinish print hoccche

1. update er time e dropdown theke 
2. show korbe prev ki chilo

lab assistant der product bonton kora hoinai except for breadboard
search kora lagbe



-----------------------------my comments now----------------
viewRequest page from student size e mone hocche enough information nai. 
comment ta thaka lagto na?


***************VIEW REQUEST ASSISTANT ER HANDLE Accept

COMMAND:


  sudo -u postgres psql

psql e dhuke
drop database labinventory;
create database labinvebtory;
psql -U postgres -h localhost -d labinventory -f mydatabase_dump.sql




psql -U postgres -h localhost -d labinventory -f mydatabase_dump.sql


  THIS IS THE TABLE IN INVENTORY MANAGER CHECK INVENTORY


  <div className=" ml-72 p-6">
      <h1 className="text-2xl font-bold mb-4">This is CheckInventory page</h1>

      <input
        type="text"
        placeholder="Search..."
        onChange={(event) => setSearchTerm(event.target.value)}
        className="mb-4 p-2 border rounded"
      />

      <table className="min-w-full table-auto">
        <thead className="justify-between">
          <tr className="bg-red-800">
            <th className="px-16 py-2">
              <span className="text-white">Name</span>
            </th>
            <th className="px-16 py-2">
              <span className="text-white">Availability</span>
            </th>
            <th className="px-16 py-2">
              <span className="text-white">Borrowed</span>
            </th>
            <th className="px-16 py-2">
              <span className="text-white">Add item</span>
            </th>
          </tr>
        </thead>
        <tbody className="bg-gray-200">
          {filteredStorage.map((equipment) => (
            <tr
              key={equipment.equipment_id}
              className="bg-white border-4 border-gray-200 text-center"
            >
              <td className="px-16 py-2">{equipment.equipment_name}</td>
              <td className="px-16 py-2">{equipment.available}</td>
              <td className="px-16 py-2">{equipment.borrowed}</td>
              <td className="px-16 py-2">
                <button
                  onClick={() => {
                    setShowModal(true);
                    setSelectedEquipment(equipment);
                  }}
                  //className="text-white bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg"
                  className="text-gray-600 font-bold text-sm bg-gray-300  rounded-lg px-8 py-2 hover:bg-red-500 hover:drop-shadow-xl"
                >
                  Update
                </button>
              </td>
            </tr>
          ))}
        </tbody>
        {showModal && selectedEquipment && (
          <div className="fixed w-full bg-slate-800 bg-opacity-80 top-0 left-0">
            <div className="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
              {/* ...rest of the modal code... */}
              <div className="bg-white ml-[500px] px-10 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
                <div className="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                  <div className="sm:flex sm:items-start">
                    <div className="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                      <h3 className="text-lg leading-6 font-medium text-gray-900">
                        {selectedEquipment.equipment_name}
                      </h3>
                      <div className="mt-4">
                        <input
                          type="text"
                          value={quantity}
                          placeholder="Quantity"
                          onChange={(e) => setQuantity(e.target.value)}
                          className="p-2 border rounded text-sm w-full"
                        />
                      </div>
                    </div>
                  </div>
                </div>
                <div className="bg-gray-50 px-4 py-4 sm:px-6 sm:flex ">
                  <button
                    onClick={() => handleUpdate(selectedEquipment)}
                    className="text-white bg-green-500 border-0 py-2 px-8 focus:outline-none hover:bg-green-600 rounded text-lg ml-4"
                  >
                    Update
                  </button>
                  <button
                    onClick={() => setShowModal(false)}
                    className="text-white bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg"
                  >
                    cancel
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
      </table>
    </div>







view requests

<div key={index} className="p-4 border-b border-gray-200">
            <p>
              <strong>Available:</strong> {item.available}
            </p>
            <p>
              <strong>Equipment Name:</strong> {item.equipment_name}
            </p>
            <p>
              <strong>Permit:</strong> {item.permit}
            </p>
            <p>
              <strong>Quantity:</strong> {item.quantity}
            </p>
            <p>
              <strong>Req ID:</strong> {item.req_id}
            </p>
            <p>
              <strong>Req Time:</strong> {item.req_time}
            </p>
            <p>
              <strong>Status Name:</strong> {item.status_name}
            </p>
            <p>
              <strong>Username:</strong> {item.username}
            </p>

            <button
              className="bg-green-500 text-white px-4 py-2 rounded mr-2"
              onClick={() => {
                handleAccept(item.req_id);
              }}
            >
              Accept
            </button>

            <button
              className="bg-red-500 text-white px-4 py-2 rounded mr-2"
              onClick={() => {
                handleDelete(item.req_id);
              }}
            >
              Delete
            </button>
            
            <button
              className="bg-blue-500 text-white px-4 py-2 rounded"
              disabled={item.permit <= 1}
            >
              Forward
            </button>

            {isOkClicked && (
              <div>
                <input
                  type="text"
                  className="border p-2 rounded mr-2"
                  value={inputValue}
                  onChange={(e) => setInputValue(e.target.value)}
                />
                <button
                  className="bg-blue-500 text-white px-4 py-2 rounded"
                  onClick={() => handleOk(item.req_id)}
                >
                  Ok
                </button>
              </div>
            )}

          </div>


















